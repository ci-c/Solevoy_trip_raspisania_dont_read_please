"""
–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–æ—Ñ–∏–ª—è.
"""

from aiogram import Dispatcher, types
from aiogram.fsm.context import FSMContext
from loguru import logger

from app.bot.callbacks import ProfileCallback
from app.bot.keyboards import get_profile_setup_keyboard, get_main_menu_keyboard
from app.bot.states import ProfileSetup
from app.services.user_service import UserService
# from ...services.education_service import EducationService  # –ü–æ–∫–∞ –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è


async def handle_profile_setup(
    callback: types.CallbackQuery, callback_data: ProfileCallback, state: FSMContext
) -> None:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–æ—Ñ–∏–ª—è."""
    await callback.answer()

    if callback_data.action == "confirm":
        await confirm_profile_setup(callback, state)
    else:
        # –û—Å—Ç–∞–ª—å–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è –ø—Ä–æ—Ñ–∏–ª—è
        await state.update_data(**{callback_data.action: callback_data.value})

        # –ü–µ—Ä–µ—Ö–æ–¥ –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —à–∞–≥—É
        if callback_data.action == "speciality":
            await state.set_state(ProfileSetup.selecting_course)
            courses = ["1", "2", "3", "4", "5", "6"]
            keyboard = get_profile_setup_keyboard("course", courses)
            await callback.message.edit_text("–í—ã–±–µ—Ä–∏—Ç–µ –∫—É—Ä—Å:", reply_markup=keyboard)


async def confirm_profile_setup(
    callback: types.CallbackQuery, state: FSMContext
) -> None:
    """–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–æ—Ñ–∏–ª—è."""
    try:
        data = await state.get_data()

        user_service = UserService()

        # –ü–æ–ª—É—á–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        user = await user_service.get_user_by_telegram_id(callback.from_user.id)
        if not user:
            await callback.message.edit_text("‚ùå –û—à–∏–±–∫–∞: –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω")
            return

        # –°–æ–∑–¥–∞–µ–º –ø—Ä–æ—Ñ–∏–ª—å —Å—Ç—É–¥–µ–Ω—Ç–∞
        from app.models.user import StudentProfile

        profile = StudentProfile(
            user_id=user.id,
            group_id=None,  # TODO: —Å–≤—è–∑–∞—Ç—å —Å group_id –∏–∑ –ë–î
            student_id=None,
            preferred_format="xlsx",
        )

        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø—Ä–æ—Ñ–∏–ª—å
        await user_service.create_or_update_profile(profile)

        # –ü–æ–ª—É—á–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å –ø—Ä–æ—Ñ–∏–ª–µ–º
        updated_user = await user_service.get_user_by_telegram_id(callback.from_user.id)

        await state.clear()
        await state.set_state(ProfileSetup.confirmation)

        await callback.message.edit_text(
            f"‚úÖ –ü—Ä–æ—Ñ–∏–ª—å —Å–æ—Ö—Ä–∞–Ω–µ–Ω!\n\n"
            f"üë§ {callback.from_user.full_name}\n"
            f"üéì {data.get('speciality', '–ù–µ —É–∫–∞–∑–∞–Ω–∞')}\n"
            f"üìö {data.get('course', '–ù–µ —É–∫–∞–∑–∞–Ω')} –∫—É—Ä—Å\n\n"
            f"–¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –≤—Å–µ–º–∏ —Ñ—É–Ω–∫—Ü–∏—è–º–∏ –±–æ—Ç–∞!",
            reply_markup=get_main_menu_keyboard(updated_user),
        )

    except Exception as e:
        logger.error(f"Error confirming profile setup: {e}")
        await callback.message.edit_text(
            "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –ø—Ä–æ—Ñ–∏–ª—è. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.",
            reply_markup=get_main_menu_keyboard(None),
        )


async def register_profile_handlers(dp: Dispatcher):
    """–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –ø—Ä–æ—Ñ–∏–ª—è."""
    dp.callback_query.register(handle_profile_setup, ProfileCallback.filter())
