"""
–°–∏—Å—Ç–µ–º–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è —Å —Ä–æ—Ç–∞—Ü–∏–µ–π –∏ —É—Ä–æ–≤–Ω—è–º–∏ –¥–æ—Å—Ç—É–ø–∞.
"""

import sys
from pathlib import Path
from loguru import logger
from typing import Optional

from ..models.user import AccessLevel


class LoggingConfig:
    """–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è."""

    def __init__(self, base_dir: Optional[Path] = None):
        self.base_dir = base_dir or Path(__file__).parent.parent.parent
        self.logs_dir = self.base_dir / "logs"
        self.logs_dir.mkdir(exist_ok=True)

    def setup_logging(self):
        """–ù–∞—Å—Ç—Ä–æ–∏—Ç—å —Å–∏—Å—Ç–µ–º—É –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è."""
        # –£–¥–∞–ª—è–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫
        logger.remove()

        # –ö–æ–Ω—Å–æ–ª—å–Ω—ã–π –≤—ã–≤–æ–¥ –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
        logger.add(
            sys.stdout,
            format=(
                "<green>{time:YYYY-MM-DD HH:mm:ss.SSS}</green> | "
                "<level>{level: <8}</level> | "
                "<cyan>{name}</cyan>:<cyan>{function}</cyan>:<cyan>{line}</cyan> | "
                "<level>{message}</level>"
            ),
            level="INFO",
            colorize=True,
        )

        # –û–±—â–∏–π –ª–æ–≥ —Ñ–∞–π–ª —Å —Ä–æ—Ç–∞—Ü–∏–µ–π
        logger.add(
            self.logs_dir / "bot.log",
            format="{time:YYYY-MM-DD HH:mm:ss.SSS} | {level: <8} | {name}:{function}:{line} | {message}",
            level="DEBUG",
            rotation="100 MB",
            retention="30 days",
            compression="zip",
            encoding="utf-8",
        )

        # –õ–æ–≥ –æ—à–∏–±–æ–∫
        logger.add(
            self.logs_dir / "errors.log",
            format="{time:YYYY-MM-DD HH:mm:ss.SSS} | {level: <8} | {name}:{function}:{line} | {message}",
            level="ERROR",
            rotation="50 MB",
            retention="60 days",
            compression="zip",
            encoding="utf-8",
        )

        # –õ–æ–≥ –¥–µ–π—Å—Ç–≤–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
        logger.add(
            self.logs_dir / "user_actions.log",
            format="{time:YYYY-MM-DD HH:mm:ss.SSS} | {extra[user_id]} | {extra[action]} | {message}",
            level="INFO",
            rotation="200 MB",
            retention="90 days",
            compression="zip",
            encoding="utf-8",
            filter=lambda record: "user_action" in record["extra"],
        )

        # –õ–æ–≥ API –∑–∞–ø—Ä–æ—Å–æ–≤
        logger.add(
            self.logs_dir / "api_requests.log",
            format="{time:YYYY-MM-DD HH:mm:ss.SSS} | {extra[request_type]} | {extra[duration_ms]}ms | {message}",
            level="DEBUG",
            rotation="100 MB",
            retention="14 days",
            compression="zip",
            encoding="utf-8",
            filter=lambda record: "api_request" in record["extra"],
        )

        # –õ–æ–≥ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –∏ –¥–æ—Å—Ç—É–ø–∞
        logger.add(
            self.logs_dir / "security.log",
            format="{time:YYYY-MM-DD HH:mm:ss.SSS} | {level: <8} | {extra[user_id]} | {extra[access_level]} | {message}",
            level="WARNING",
            rotation="50 MB",
            retention="365 days",  # –î–æ–ª–≥–æ–µ —Ö—Ä–∞–Ω–µ–Ω–∏–µ –¥–ª—è –∞—É–¥–∏—Ç–∞
            compression="zip",
            encoding="utf-8",
            filter=lambda record: "security" in record["extra"],
        )


def log_user_action(user_id: int, action: str, details: str = ""):
    """–õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–µ–π—Å—Ç–≤–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è."""
    logger.bind(user_action=True, user_id=user_id, action=action).info(details)


def log_api_request(request_type: str, duration_ms: int, details: str = ""):
    """–õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ API –∑–∞–ø—Ä–æ—Å–æ–≤."""
    logger.bind(
        api_request=True, request_type=request_type, duration_ms=duration_ms
    ).debug(details)


def log_security_event(
    user_id: int, access_level: AccessLevel, event: str, details: str = ""
):
    """–õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–±—ã—Ç–∏–π –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏."""
    logger.bind(
        security=True, user_id=user_id, access_level=access_level.value
    ).warning(f"{event}: {details}")


def get_error_details_for_user(error: Exception, user_access_level: AccessLevel) -> str:
    """–ü–æ–ª—É—á–∏—Ç—å –¥–µ—Ç–∞–ª–∏ –æ—à–∏–±–∫–∏ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —É—Ä–æ–≤–Ω—è –¥–æ—Å—Ç—É–ø–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è."""
    base_message = "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –≤ —Ä–∞–±–æ—Ç–µ –±–æ—Ç–∞"

    if user_access_level in [AccessLevel.ADMIN, AccessLevel.TESTER]:
        # –†–∞—Å—à–∏—Ä–µ–Ω–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –¥–ª—è –∞–¥–º–∏–Ω–æ–≤ –∏ —Ç–µ—Å—Ç–µ—Ä–æ–≤
        error_type = type(error).__name__
        error_msg = str(error)

        return (
            f"üîß **–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:**\n"
            f"‚Ä¢ –¢–∏–ø –æ—à–∏–±–∫–∏: `{error_type}`\n"
            f"‚Ä¢ –°–æ–æ–±—â–µ–Ω–∏–µ: `{error_msg[:300]}{'...' if len(error_msg) > 300 else ''}`\n"
            f"‚Ä¢ –í—Ä–µ–º—è: `{logger._core.get_time().isoformat()}`\n\n"
            f"üí° –î–∞–Ω–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º."
        )

    elif user_access_level == AccessLevel.BASIC:
        # –ë–∞–∑–æ–≤–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –¥–ª—è –æ–±—ã—á–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
        return (
            f"{base_message}. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ –∏–ª–∏ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É.\n\n"
            f"–ï—Å–ª–∏ –ø—Ä–æ–±–ª–µ–º–∞ –ø–æ–≤—Ç–æ—Ä—è–µ—Ç—Å—è, —Å–æ–æ–±—â–∏—Ç–µ –æ–± —ç—Ç–æ–º –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É."
        )

    else:  # GUEST
        # –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –¥–ª—è –≥–æ—Å—Ç–µ–π
        return f"{base_message}. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ."


def log_bot_startup():
    """–õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞."""
    logger.info("=" * 50)
    logger.info("SZGMU Schedule Bot is starting up")
    logger.info("=" * 50)


def log_bot_shutdown():
    """–õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –±–æ—Ç–∞."""
    logger.info("=" * 50)
    logger.info("SZGMU Schedule Bot is shutting down")
    logger.info("=" * 50)
